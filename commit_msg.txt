5A - Refactoring and performance. Bug fixes.

Changes:
    Performance:
    - Components now re-use surfaces
    - Enabled hardware acceleration when available
    - Blit lists are now cached
    - Text is now cached
    - Migrated from pygame to pygame-ce for performance improvements
    - Implemented render-on-change architecture across all components
    - Removed expensive composite surface system from base.py
    - Added high-precision timing using time.perf_counter in window.py
    - Implemented fblits batch rendering for better performance
    - Added viewport culling to reduce unnecessary blits
    - Enhanced text rendering with cached_render utility function
    - Added comprehensive slots to all component classes for memory optimization
    - Simplified component rendering to reduce draw calls
    - Reduced surface creation overhead
    - Optimized text rendering with caching
    - Improved event processing efficiency
    - Added viewport culling for off-screen elements
    - Switched to pygame-ce fblits for batch rendering
    - High-precision deltatime measurement
    - Memory optimizations with __slots__

    Bugfixes:
    - Fixed multiple field input
    - Fixed event bleed-through
    - Fixed event processing order
    - Fixed progress bar visual updates with immediate display

    Features:
    - Added TabFrame component for tab-based interfaces
    - Added window.every and window.after
    - Added progressbar smoothing
    - Added pygame-ce version check in engine/__init__.py
    - Added performance benchmark and profiling tools
    - Added input focus management through Window class

    Enhancements:
    - Tabframe now handles creating and tracking frames
    - Improved event handling with proper consumption and focus management
    - Optimized button rendering with hover state caching
    - Enhanced dropdown with better popup management and overlay support
    - Improved Field component with multiline support and IME handling
    - Enhanced all components with render-on-change optimizations
    - Updated main.py with comprehensive demo UI

    Package Distribution:
    - Added GitHub Actions workflows for automated testing and PyPI publishing
    - Implemented version detection from commit messages using scripts/get_version.py
    - Added comprehensive setup.py and setup.cfg for pip package distribution
    - Added PolyForm Noncommercial License 1.0.0
    - Created test infrastructure with pytest configuration
    - Added coverage reporting and wheel pruning scripts

New Components:
- TabFrame

New Infrastructure:
- .github/workflows/publish.yml (automated PyPI publishing)
- .github/workflows/pytest.yml (automated testing)
- setup.py and setup.cfg (package configuration)
- pyproject.toml (build system configuration)
- scripts/get_version.py (version detection from git commits)
- scripts/prune_wheels.py (CI wheel management)
- tests/ directory with unit and integration tests
- .coveragerc and pytest.ini (test configuration)
- COPYING.md (license file)

Affected:
- Everything
